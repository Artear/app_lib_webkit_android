apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'

idea {
    module {
        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}

static int getVersionCode(branch) {
    def versionCodeCommand = "git rev-list --count " + branch
    return versionCodeCommand.execute().text.trim().toInteger()
}

static def getBranchName() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

android {
    compileSdkVersion buildVersions.targetSdk
    buildToolsVersion buildVersions.buildTools

    def branch = getBranchName()
    def vCode = 0 + getVersionCode(branch)

    defaultConfig {
        applicationId "com.artear.webwrapexample"
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode vCode
        versionName libraryVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation project(':webwrap')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Test
    testImplementation lib.junit.library
    androidTestImplementation lib.androidx.testRunner
    androidTestImplementation lib.androidx.extJunit
    androidTestImplementation lib.espresso.core

    //AndroidX
    implementation lib.androidx.appcompat

    //Artear
    implementation lib.artear.multitracker
    implementation lib.artear.tools
    implementation lib.artear.uiView
    implementation lib.artear.domain
    implementation lib.artear.injector
    kapt lib.artear.injectorKapt

    //Logger
    implementation lib.timber.library

    //Coroutines
    implementation lib.kotlin.coroutinesCore
    implementation lib.kotlin.coroutinesAndroid

    implementation lib.square.moshi
    implementation lib.square.okio
    kapt lib.square.moshiKapt

    implementation 'com.github.yanex:takenoko:0.1' //)?
}
