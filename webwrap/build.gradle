buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath lib.plugin.bintray
        classpath lib.plugin.dcendents
        classpath lib.plugin.dokka
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

ext {
    bintrayRepo = 'Android'
    bintrayName = 'Webwrap'

    publishedGroupId = 'com.artear.webwrap'
    libraryName = 'Webwrap'
    artifact = 'webwrap'

    libraryDescription = 'webwrap sample library'

    siteUrl = 'https://github.com/Artear/app_lib_webwrap_android'
    gitUrl = 'https://github.com/Artear/app_lib_webwrap_android.git'

    developerId = 'artear'
    developerName = 'Artear Moviles'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

static int getVersionCode(branch) {
    def versionCodeCommand = "git rev-list --count " + branch
    return versionCodeCommand.execute().text.trim().toInteger()
}

static def getBranchName() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

android {
    compileSdkVersion buildVersions.targetSdk
    buildToolsVersion buildVersions.buildTools

    def branch = getBranchName()
    def vCode = 0 + getVersionCode(branch)

    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.getName()}-${defaultConfig.versionName}-${variant.buildType.name}.aar"
        }
    }

    defaultConfig {
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode vCode
        versionName libraryVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Test
    testImplementation lib.junit.library
    androidTestImplementation lib.androidx.testRunner
    androidTestImplementation lib.androidx.extJunit
    androidTestImplementation lib.espresso.core

    //AndroidX
    implementation lib.androidx.appcompat

    //Artear
    implementation lib.artear.multitracker
    implementation lib.artear.tools
    implementation lib.artear.uiView
    implementation lib.artear.domain
    implementation lib.artear.injector
    kapt lib.artear.injectorKapt

    //Logger
    implementation lib.timber.library

    //Coroutines
    implementation lib.kotlin.coroutinesCore
    implementation lib.kotlin.coroutinesAndroid

    implementation lib.square.moshi
    implementation lib.square.okio
    kapt lib.square.moshiKapt
}

group = publishedGroupId
version = libraryVersion

apply from: 'publication.gradle'
apply from: 'bintray.gradle'
apply plugin: 'idea'

idea {
    module {
        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}